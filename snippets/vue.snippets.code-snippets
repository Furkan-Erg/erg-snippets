{
  "Login Page": {
    "prefix": "erg-login",
    "body": [
      "<template>",
      "  <div class=\"flex items-center justify-center min-h-screen bg-gray-100\">",
      "    <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">",
      "      <h2 class=\"text-2xl font-semibold mb-6 text-center text-gray-700\">Login</h2>",
      "      <form @submit.prevent=\"handleLogin\">",
      "        <div class=\"mb-4\">",
      "          <label for=\"username\" class=\"block text-gray-600 mb-2\">Username</label>",
      "          <input",
      "            id=\"username\"",
      "            type=\"text\"",
      "            v-model=\"username\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <div class=\"mb-6\">",
      "          <label for=\"password\" class=\"block text-gray-600 mb-2\">Password</label>",
      "          <input",
      "            id=\"password\"",
      "            type=\"password\"",
      "            v-model=\"password\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <button",
      "          type=\"submit\"",
      "          class=\"w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200\"",
      "        >",
      "          Login",
      "        </button>",
      "      </form>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent, ref } from 'vue';",
      "",
      "export default defineComponent({",
      "  setup() {",
      "    const username = ref('');",
      "    const password = ref('');",
      "",
      "    const handleLogin = async () => {",
      "      try {",
      "        const response = await fetch('example-url', {",
      "          method: 'POST',",
      "          headers: {",
      "            'Content-Type': 'application/json',",
      "          },",
      "          body: JSON.stringify({ username: username.value, password: password.value }),",
      "        });",
      "        const data = await response.json();",
      "        console.log('Response:', data);",
      "      } catch (error) {",
      "        console.error('Error:', error);",
      "      }",
      "    };",
      "",
      "    return {",
      "      username,",
      "      password,",
      "      handleLogin,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a login page for you"
  },
  "Register Page": {
    "prefix": "erg-register",
    "body": [
      "<template>",
      "  <div class=\"flex items-center justify-center min-h-screen bg-gray-100\">",
      "    <div class=\"bg-white p-8 rounded-lg shadow-lg max-w-sm w-full\">",
      "      <h2 class=\"text-2xl font-semibold mb-6 text-center text-gray-700\">Register</h2>",
      "      <form @submit.prevent=\"handleRegister\">",
      "        <div class=\"mb-4\">",
      "          <label for=\"username\" class=\"block text-gray-600 mb-2\">Username</label>",
      "          <input",
      "            id=\"username\"",
      "            type=\"text\"",
      "            v-model=\"username\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <div class=\"mb-4\">",
      "          <label for=\"email\" class=\"block text-gray-600 mb-2\">Email</label>",
      "          <input",
      "            id=\"email\"",
      "            type=\"email\"",
      "            v-model=\"email\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <div class=\"mb-4\">",
      "          <label for=\"password\" class=\"block text-gray-600 mb-2\">Password</label>",
      "          <input",
      "            id=\"password\"",
      "            type=\"password\"",
      "            v-model=\"password\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <div class=\"mb-4\">",
      "          <label for=\"confirmPassword\" class=\"block text-gray-600 mb-2\">Confirm Password</label>",
      "          <input",
      "            id=\"confirmPassword\"",
      "            type=\"password\"",
      "            v-model=\"confirmPassword\"",
      "            class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"",
      "            required",
      "          />",
      "        </div>",
      "        <p v-if=\"error\" class=\"text-red-500 text-sm mb-4\">{{ error }}</p>",
      "        <button",
      "          type=\"submit\"",
      "          class=\"w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200\"",
      "        >",
      "          Register",
      "        </button>",
      "      </form>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent, ref } from 'vue';",
      "",
      "export default defineComponent({",
      "  setup() {",
      "    const username = ref('');",
      "    const email = ref('');",
      "    const password = ref('');",
      "    const confirmPassword = ref('');",
      "    const error = ref('');",
      "",
      "    const handleRegister = async () => {",
      "      if (password.value !== confirmPassword.value) {",
      "        error.value = 'Passwords do not match';",
      "        return;",
      "      }",
      "      try {",
      "        const response = await fetch('example-url', {",
      "          method: 'POST',",
      "          headers: {",
      "            'Content-Type': 'application/json',",
      "          },",
      "          body: JSON.stringify({ username: username.value, email: email.value, password: password.value }),",
      "        });",
      "        const data = await response.json();",
      "        console.log('Response:', data);",
      "      } catch (error) {",
      "        console.error('Error:', error);",
      "      }",
      "    };",
      "",
      "    return {",
      "      username,",
      "      email,",
      "      password,",
      "      confirmPassword,",
      "      error,",
      "      handleRegister,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a registration page for you"
  },
  "404 Page": {
    "prefix": "erg-404",
    "body": [
      "<template>",
      "  <div class=\"flex items-center justify-center h-screen bg-gray-100\">",
      "    <div class=\"text-center\">",
      "      <h1 class=\"text-6xl font-bold text-indigo-600 mb-4\">404</h1>",
      "      <p class=\"text-2xl text-gray-700 mb-6\">Oops! Page not found.</p>",
      "      <button",
      "        @click=\"goHome\"",
      "        class=\"px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition duration-200\"",
      "      >",
      "        Go to Homepage",
      "      </button>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue';",
      "",
      "export default defineComponent({",
      "  setup() {",
      "    const goHome = () => {",
      "      window.location.replace('/');",
      "    };",
      "",
      "    return {",
      "      goHome,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a 404 Not Found page for you"
  },
  "About Page": {
    "prefix": "erg-about",
    "body": [
      "<template>",
      "  <div class=\"flex items-center justify-center min-h-screen bg-gray-100 p-6\">",
      "    <div class=\"max-w-4xl bg-white rounded-lg shadow-lg p-8\">",
      "      <h1 class=\"text-4xl font-bold text-indigo-600 text-center mb-4\">About Us</h1>",
      "      <p class=\"text-lg text-gray-700 mb-6 text-center\">",
      "        We are a passionate team dedicated to delivering the best solutions for our customers. ",
      "        Our mission is to empower businesses through innovative technology.",
      "      </p>",
      "      <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Our Mission</h2>",
      "      <p class=\"text-gray-600 mb-6\">",
      "        Our mission is to revolutionize the industry by providing top-notch services and building ",
      "        long-term partnerships with our clients.",
      "      </p>",
      "      <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Our Vision</h2>",
      "      <p class=\"text-gray-600 mb-6\">",
      "        We envision a world where technology seamlessly integrates into everyday life, enhancing ",
      "        productivity and driving innovation.",
      "      </p>",
      "      <h2 class=\"text-2xl font-semibold text-gray-800 mb-4\">Our Team</h2>",
      "      <p class=\"text-gray-600 mb-6\">",
      "        Our team consists of talented professionals from various fields, working together to create ",
      "        impactful solutions and deliver exceptional results.",
      "      </p>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'AboutUs',",
      "});",
      "</script>"
    ],
    "description": "This will create an About Us page for you"
  },
  "Button": {
    "prefix": "erg-button",
    "body": [
      "<template>",
      "  <button",
      "    class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition\"",
      "    @click=\"onClick\"",
      "  >",
      "    {{ text }}",
      "  </button>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'Button',",
      "  props: {",
      "    onClick: {",
      "      type: Function,",
      "      required: true,",
      "    },",
      "    text: {",
      "      type: String,",
      "      required: true,",
      "    },",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a reusable button component"
  },
  "Search": {
    "prefix": "erg-search",
    "body": [
      "<template>",
      "  <div class=\"flex\">",
      "    <input",
      "      type=\"text\"",
      "      class=\"border border-gray-300 rounded-l-md px-4 py-2 w-full focus:outline-none\"",
      "      :placeholder=\"placeholder\"",
      "      v-model=\"query\"",
      "    />",
      "    <button",
      "      class=\"bg-indigo-600 text-white px-4 py-2 rounded-r-md hover:bg-indigo-700 transition\"",
      "      @click=\"handleSearch\"",
      "    >",
      "      Search",
      "    </button>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent, ref } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'Search',",
      "  props: {",
      "    placeholder: {",
      "      type: String,",
      "      default: 'Search...',",
      "    },",
      "    onSearch: {",
      "      type: Function,",
      "      required: true,",
      "    },",
      "  },",
      "  setup(props) {",
      "    const query = ref('');",
      "",
      "    const handleSearch = () => {",
      "      props.onSearch(query.value);",
      "    };",
      "",
      "    return {",
      "      query,",
      "      handleSearch,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a reusable search component"
  },
  "Search Select": {
    "prefix": "erg-search-select",
    "body": [
      "<template>",
      "  <div class=\"relative\">",
      "    <input",
      "      type=\"text\"",
      "      class=\"border border-gray-300 rounded-md px-4 py-2 w-full focus:outline-none\"",
      "      placeholder=\"Search...\"",
      "      v-model=\"query\"",
      "      @focus=\"handleFocus\"",
      "      @blur=\"handleBlur\"",
      "    />",
      "    <ul v-if=\"isOpen && filteredOptions.length > 0\" class=\"absolute bg-white border border-gray-300 rounded-md w-full mt-1 max-h-48 overflow-auto z-10\">",
      "      <li",
      "        v-for=\"option in filteredOptions\"",
      "        :key=\"option\"",
      "        class=\"px-4 py-2 hover:bg-indigo-100 cursor-pointer\"",
      "        @click=\"handleSelect(option)\"",
      "      >",
      "        {{ option }}",
      "      </li>",
      "    </ul>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent, ref, computed } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'SearchSelect',",
      "  props: {",
      "    options: {",
      "      type: Array,",
      "      required: true,",
      "    },",
      "    onSelect: {",
      "      type: Function,",
      "      required: true,",
      "    },",
      "  },",
      "  setup(props) {",
      "    const query = ref('');",
      "    const isOpen = ref(false);",
      "",
      "    const filteredOptions = computed(() =>",
      "      props.options.filter(option =>",
      "        option.toString().toLowerCase().includes(query.value.toLowerCase())",
      "      )",
      "    );",
      "",
      "    const handleSelect = (option) => {",
      "      query.value = option;",
      "      isOpen.value = false;",
      "      props.onSelect(option);",
      "    };",
      "",
      "    const handleFocus = () => {",
      "      isOpen.value = true;",
      "    };",
      "",
      "    const handleBlur = () => {",
      "      setTimeout(() => {",
      "        isOpen.value = false;",
      "      }, 100);",
      "    };",
      "",
      "    return {",
      "      query,",
      "      isOpen,",
      "      filteredOptions,",
      "      handleSelect,",
      "      handleFocus,",
      "      handleBlur,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a reusable search select component"
  },
  "Modal": {
    "prefix": "erg-modal",
    "body": [
      "<template>",
      "  <div>",
      "    <button",
      "      class=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition\"",
      "      @click=\"openModal\"",
      "    >",
      "      Open Modal",
      "    </button>",
      "",
      "    <div v-if=\"isOpen\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">",
      "      <div class=\"bg-white rounded-lg p-6 shadow-lg max-w-md w-full relative\">",
      "        <button",
      "          class=\"absolute top-3 right-3 text-gray-500 hover:text-gray-700 transition\"",
      "          @click=\"closeModal\"",
      "        >",
      "          &#x2715;",
      "        </button>",
      "",
      "        <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">{{ title }}</h2>",
      "        <div><slot></slot></div>",
      "",
      "        <div class=\"flex justify-end mt-6 space-x-2\">",
      "          <button",
      "            class=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition\"",
      "            @click=\"closeModal\"",
      "          >",
      "            Close",
      "          </button>",
      "",
      "          <button",
      "            class=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition\"",
      "            @click=\"handleOk\"",
      "          >",
      "            Ok",
      "          </button>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  </div>",
      "</template>",
      "",
      "<script lang=\"ts\">",
      "import { defineComponent, ref } from 'vue';",
      "",
      "export default defineComponent({",
      "  name: 'Modal',",
      "  props: {",
      "    title: {",
      "      type: String,",
      "      required: true,",
      "    },",
      "    onOk: {",
      "      type: Function,",
      "      required: true,",
      "    },",
      "  },",
      "  setup(props) {",
      "    const isOpen = ref(false);",
      "",
      "    const openModal = () => {",
      "      isOpen.value = true;",
      "    };",
      "",
      "    const closeModal = () => {",
      "      isOpen.value = false;",
      "    };",
      "",
      "    const handleOk = () => {",
      "      props.onOk();",
      "      closeModal();",
      "    };",
      "",
      "    return {",
      "      isOpen,",
      "      openModal,",
      "      closeModal,",
      "      handleOk,",
      "    };",
      "  },",
      "});",
      "</script>"
    ],
    "description": "This will create a reusable modal component"
  }
}
