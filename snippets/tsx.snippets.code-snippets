{
  "Login Page": {
    "prefix": "erg-login",
    "body": [
      "import React, { useState, FormEvent } from 'react';",
      "",
      "const Login: React.FC = () => {",
      "  const [username, setUsername] = useState<string>('');",
      "  const [password, setPassword] = useState<string>('');",
      "",
      "  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {",
      "    e.preventDefault();",
      "    try {",
      "      const response = await fetch('example-url', {",
      "        method: 'POST',",
      "        headers: {",
      "          'Content-Type': 'application/json',",
      "        },",
      "        body: JSON.stringify({ username, password }),",
      "      });",
      "      const data = await response.json();",
      "      console.log('Response:', data);",
      "    } catch (error) {",
      "      console.error('Error:', error);",
      "    }",
      "  };",
      "",
      "  return (",
      "    <div className='flex items-center justify-center min-h-screen bg-gray-100'>",
      "      <div className='bg-white p-8 rounded-lg shadow-lg max-w-sm w-full'>",
      "        <h2 className='text-2xl font-semibold mb-6 text-center text-gray-700'>Login</h2>",
      "        <form onSubmit={handleLogin}>",
      "          <div className='mb-4'>",
      "            <label htmlFor='username' className='block text-gray-600 mb-2'>Username</label>",
      "            <input",
      "              id='username'",
      "              type='text'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={username}",
      "              onChange={(e) => setUsername(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          <div className='mb-6'>",
      "            <label htmlFor='password' className='block text-gray-600 mb-2'>Password</label>",
      "            <input",
      "              id='password'",
      "              type='password'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={password}",
      "              onChange={(e) => setPassword(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          <button",
      "            type='submit'",
      "            className='w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200'",
      "          >",
      "            Login",
      "          </button>",
      "        </form>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Login;"
    ],
    "description": "This will create a certain login page for you"
  },
  "Register Page": {
    "prefix": "erg-register",
    "body": [
      "import React, { useState, FormEvent } from 'react';",
      "",
      "const Register: React.FC = () => {",
      "  const [username, setUsername] = useState<string>('');",
      "  const [email, setEmail] = useState<string>('');",
      "  const [password, setPassword] = useState<string>('');",
      "  const [confirmPassword, setConfirmPassword] = useState<string>('');",
      "  const [error, setError] = useState<string>('');",
      "",
      "  const handleRegister = async (e: FormEvent<HTMLFormElement>) => {",
      "    e.preventDefault();",
      "    if (password !== confirmPassword) {",
      "      setError('Passwords do not match');",
      "      return;",
      "    }",
      "    try {",
      "      const response = await fetch('example-url', {",
      "        method: 'POST',",
      "        headers: {",
      "          'Content-Type': 'application/json',",
      "        },",
      "        body: JSON.stringify({ username, email, password }),",
      "      });",
      "      const data = await response.json();",
      "      console.log('Response:', data);",
      "    } catch (error) {",
      "      console.error('Error:', error);",
      "    }",
      "  };",
      "",
      "  return (",
      "    <div className='flex items-center justify-center min-h-screen bg-gray-100'>",
      "      <div className='bg-white p-8 rounded-lg shadow-lg max-w-sm w-full'>",
      "        <h2 className='text-2xl font-semibold mb-6 text-center text-gray-700'>Register</h2>",
      "        <form onSubmit={handleRegister}>",
      "          <div className='mb-4'>",
      "            <label htmlFor='username' className='block text-gray-600 mb-2'>Username</label>",
      "            <input",
      "              id='username'",
      "              type='text'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={username}",
      "              onChange={(e) => setUsername(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          <div className='mb-4'>",
      "            <label htmlFor='email' className='block text-gray-600 mb-2'>Email</label>",
      "            <input",
      "              id='email'",
      "              type='email'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={email}",
      "              onChange={(e) => setEmail(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          <div className='mb-4'>",
      "            <label htmlFor='password' className='block text-gray-600 mb-2'>Password</label>",
      "            <input",
      "              id='password'",
      "              type='password'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={password}",
      "              onChange={(e) => setPassword(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          <div className='mb-4'>",
      "            <label htmlFor='confirmPassword' className='block text-gray-600 mb-2'>Confirm Password</label>",
      "            <input",
      "              id='confirmPassword'",
      "              type='password'",
      "              className='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              value={confirmPassword}",
      "              onChange={(e) => setConfirmPassword(e.target.value)}",
      "              required",
      "            />",
      "          </div>",
      "          {error && <p className='text-red-500 text-sm mb-4'>{error}</p>}",
      "          <button",
      "            type='submit'",
      "            className='w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200'",
      "          >",
      "            Register",
      "          </button>",
      "        </form>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Register;"
    ],
    "description": "This will create a certain registration page for you"
  },
  "404 Page": {
    "prefix": "erg-404",
    "body": [
      "import React from 'react';",
      "",
      "const NotFoundPage: React.FC = () => {",
      "",
      "  const goHome = () => {",
      "    window.location.replace('/');",
      "  };",
      "",
      "  return (",
      "    <div className='flex items-center justify-center h-screen bg-gray-100'>",
      "      <div className='text-center'>",
      "        <h1 className='text-6xl font-bold text-indigo-600 mb-4'>404</h1>",
      "        <p className='text-2xl text-gray-700 mb-6'>Oops! Page not found.</p>",
      "        <button",
      "          onClick={goHome}",
      "          className='px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition duration-200'",
      "        >",
      "          Go to Homepage",
      "        </button>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default NotFoundPage;"
    ],
    "description": "This will create a 404 Not Found page for you"
  },
  "About Page": {
    "prefix": "erg-about",
    "body": [
      "import React from 'react';",
      "",
      "const AboutUs: React.FC = () => {",
      "  return (",
      "    <div className='flex items-center justify-center min-h-screen bg-gray-100 p-6'>",
      "      <div className='max-w-4xl bg-white rounded-lg shadow-lg p-8'>",
      "        <h1 className='text-4xl font-bold text-indigo-600 text-center mb-4'>About Us</h1>",
      "        <p className='text-lg text-gray-700 mb-6 text-center'>",
      "          We are a passionate team dedicated to delivering the best solutions for our customers. ",
      "          Our mission is to empower businesses through innovative technology.",
      "        </p>",
      "        <h2 className='text-2xl font-semibold text-gray-800 mb-4'>Our Mission</h2>",
      "        <p className='text-gray-600 mb-6'>",
      "          Our mission is to revolutionize the industry by providing top-notch services and building ",
      "          long-term partnerships with our clients.",
      "        </p>",
      "        <h2 className='text-2xl font-semibold text-gray-800 mb-4'>Our Vision</h2>",
      "        <p className='text-gray-600 mb-6'>",
      "          We envision a world where technology seamlessly integrates into everyday life, enhancing ",
      "          productivity and driving innovation.",
      "        </p>",
      "        <h2 className='text-2xl font-semibold text-gray-800 mb-4'>Our Team</h2>",
      "        <p className='text-gray-600 mb-6'>",
      "          Our team consists of talented professionals from various fields, working together to create ",
      "          impactful solutions and deliver exceptional results.",
      "        </p>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default AboutUs;"
    ],
    "description": "This will create an About Us page for you"
  },
  "Button": {
    "prefix": "erg-button",
    "body": [
      "import React from 'react';",
      "",
      "interface ButtonProps {",
      "  onClick: () => void;",
      "  text: string;",
      "}",
      "",
      "const Button: React.FC<ButtonProps> = ({ onClick, text }) => {",
      "  return (",
      "    <button",
      "      className={`px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition`} ",
      "      onClick={onClick}",
      "    >",
      "      {text}",
      "    </button>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "This will create a reusable button component"
  },
  "Search": {
    "prefix": "erg-search",
    "body": [
      "import { useState } from 'react';",
      "",
      "interface SearchProps {",
      "  placeholder?: string;",
      "  onSearch: (query: string) => void;",
      "}",
      "",
      "const Search: React.FC<SearchProps> = ({ placeholder = 'Search...', onSearch }) => {",
      "  const [query, setQuery] = useState('');",
      "  return (",
      "    <div className='flex'>",
      "      <input",
      "        type='text'",
      "        className='border border-gray-300 rounded-l-md px-4 py-2 w-full focus:outline-none'",
      "        placeholder={placeholder}",
      "        value={query}",
      "        onChange={(e) => setQuery(e.target.value)}",
      "      />",
      "      <button",
      "        className='bg-indigo-600 text-white px-4 py-2 rounded-r-md hover:bg-indigo-700 transition'",
      "        onClick={() => onSearch(query)}",
      "      >",
      "        Search",
      "      </button>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Search;"
    ],
    "description": "This will create a reusable search component"
  },
  "Search Select": {
    "prefix": "erg-search-select",
    "body": [
      "import React, { useState, useRef } from 'react';",
      "",
      "interface SearchSelectProps {",
      "  options: string[];",
      "  onSelect: (option: string) => void;",
      "}",
      "",
      "const SearchSelect: React.FC<SearchSelectProps> = ({ options, onSelect }) => {",
      "  const [query, setQuery] = useState('');",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const searchInputRef = useRef<HTMLDivElement>(null);",
      "",
      "  const filteredOptions = options.filter(option =>",
      "    option.toString().toLowerCase().includes(query.toLowerCase())",
      "  );",
      "",
      "  const handleSelect = (option: string) => {",
      "    setQuery(option);",
      "    setIsOpen(false);",
      "    onSelect(option);",
      "  };",
      "",
      "  const handleFocus = () => {",
      "    setIsOpen(true);",
      "  };",
      "",
      "  const handleBlur = () => {",
      "    setTimeout(() => {",
      "      setIsOpen(false);",
      "    }, 100);",
      "  };",
      "",
      "  return (",
      "    <div className='relative' ref={searchInputRef}>",
      "      <input",
      "        type='text'",
      "        className='border border-gray-300 rounded-md px-4 py-2 w-full focus:outline-none'",
      "        placeholder='Search...'",
      "        value={query}",
      "        onFocus={handleFocus}",
      "        onBlur={handleBlur}",
      "        onChange={(e) => setQuery(e.target.value)}",
      "      />",
      "      {isOpen && filteredOptions.length > 0 && (",
      "        <ul className='absolute bg-white border border-gray-300 rounded-md w-full mt-1 max-h-48 overflow-auto z-10'>",
      "          {filteredOptions.map(option => (",
      "            <li",
      "              key={option}",
      "              className='px-4 py-2 hover:bg-indigo-100 cursor-pointer'",
      "              onClick={() => handleSelect(option)}",
      "            >",
      "              {option}",
      "            </li>",
      "          ))}",
      "        </ul>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default SearchSelect;"
    ],
    "description": "This will create a reusable search select component"
  },
  "Modal": {
    "prefix": "erg-modal",
    "body": [
      "import React, { useState } from 'react';",
      "",
      "interface ModalProps {",
      "  title: string;",
      "  onOk: (data?: any) => void;",
      "  children?: React.ReactNode;",
      "}",
      "",
      "const Modal: React.FC<ModalProps> = ({ title, children, onOk }) => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "",
      "  const openModal = () => {",
      "    setIsOpen(true);",
      "  };",
      "",
      "  const closeModal = () => {",
      "    setIsOpen(false);",
      "  };",
      "",
      "  const onClick = (data?: any) => {",
      "    onOk(data);",
      "    closeModal();",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <button",
      "        className='px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition'",
      "        onClick={openModal}",
      "      >",
      "        Open Modal",
      "      </button>",
      "",
      "      {isOpen && (",
      "        <div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50'>",
      "          <div className='bg-white rounded-lg p-6 shadow-lg max-w-md w-full relative'>",
      "            <button",
      "              className='absolute top-3 right-3 text-gray-500 hover:text-gray-700 transition'",
      "              onClick={closeModal}",
      "            >",
      "              &#x2715;",
      "            </button>",
      "",
      "            <h2 className='text-xl font-semibold text-gray-800 mb-4'>{title}</h2>",
      "            <div>{children}</div>",
      "",
      "            <div className='flex justify-end mt-6 space-x-2'>",
      "              <button",
      "                className='bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition'",
      "                onClick={closeModal}",
      "              >",
      "                Close",
      "              </button>",
      "",
      "              <button",
      "                className='bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition'",
      "                onClick={onClick}",
      "              >",
      "                Ok",
      "              </button>",
      "            </div>",
      "          </div>",
      "        </div>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Modal;"
    ],
    "description": "This will create a reusable modal component"
  }
}
