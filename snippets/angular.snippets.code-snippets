{
  "Login Page": {
    "prefix": "erg-login",
    "body": [
      "import { Component } from '@angular/core';",
      "import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';",
      "",
      "@Component({",
      "  selector: 'app-login',",
      "  template: `",
      "    <div class='flex items-center justify-center min-h-screen bg-gray-100'>",
      "      <div class='bg-white p-8 rounded-lg shadow-lg max-w-sm w-full'>",
      "        <h2 class='text-2xl font-semibold mb-6 text-center text-gray-700'>Login</h2>",
      "        <form [formGroup]='loginForm' (ngSubmit)='handleLogin()'>",
      "          <div class='mb-4'>",
      "            <label for='username' class='block text-gray-600 mb-2'>Username</label>",
      "            <input",
      "              id='username'",
      "              type='text'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='username'",
      "              required",
      "            />",
      "          </div>",
      "          <div class='mb-6'>",
      "            <label for='password' class='block text-gray-600 mb-2'>Password</label>",
      "            <input",
      "              id='password'",
      "              type='password'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='password'",
      "              required",
      "            />",
      "          </div>",
      "          <button",
      "            type='submit'",
      "            class='w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200'",
      "          >",
      "            Login",
      "          </button>",
      "        </form>",
      "      </div>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "  imports: [ReactiveFormsModule],",
      "})",
      "export class LoginComponent {",
      "  loginForm: FormGroup;",
      "",
      "  constructor(private fb: FormBuilder) {",
      "    this.loginForm = this.fb.group({",
      "      username: ['', Validators.required],",
      "      password: ['', Validators.required]",
      "    });",
      "  }",
      "",
      "  async handleLogin() {",
      "    const { username, password } = this.loginForm.value;",
      "    try {",
      "      const response = await fetch('example-url', {",
      "        method: 'POST',",
      "        headers: {",
      "          'Content-Type': 'application/json',",
      "        },",
      "        body: JSON.stringify({ username, password }),",
      "      });",
      "      const data = await response.json();",
      "      console.log('Response:', data);",
      "    } catch (error) {",
      "      console.error('Error:', error);",
      "    }",
      "  }",
      "}"
    ],
    "description": "This will create a certain login page for you"
  },
  "Register Page": {
    "prefix": "erg-register",
    "body": [
      "import { CommonModule } from '@angular/common';",
      "import { Component } from '@angular/core';",
      "import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';",
      "",
      "@Component({",
      "  selector: 'app-register',",
      "  template: `",
      "    <div class='flex items-center justify-center min-h-screen bg-gray-100'>",
      "      <div class='bg-white p-8 rounded-lg shadow-lg max-w-sm w-full'>",
      "        <h2 class='text-2xl font-semibold mb-6 text-center text-gray-700'>Register</h2>",
      "        <form [formGroup]='registerForm' (ngSubmit)='handleRegister()'>",
      "          <div class='mb-4'>",
      "            <label for='username' class='block text-gray-600 mb-2'>Username</label>",
      "            <input",
      "              id='username'",
      "              type='text'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='username'",
      "              required",
      "            />",
      "          </div>",
      "          <div class='mb-4'>",
      "            <label for='email' class='block text-gray-600 mb-2'>Email</label>",
      "            <input",
      "              id='email'",
      "              type='email'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='email'",
      "              required",
      "            />",
      "          </div>",
      "          <div class='mb-4'>",
      "            <label for='password' class='block text-gray-600 mb-2'>Password</label>",
      "            <input",
      "              id='password'",
      "              type='password'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='password'",
      "              required",
      "            />",
      "          </div>",
      "          <div class='mb-4'>",
      "            <label for='confirmPassword' class='block text-gray-600 mb-2'>Confirm Password</label>",
      "            <input",
      "              id='confirmPassword'",
      "              type='password'",
      "              class='w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500'",
      "              formControlName='confirmPassword'",
      "              required",
      "            />",
      "          </div>",
      "          <p *ngIf='error' class='text-red-500 text-sm mb-4'>{{ error }}</p>",
      "          <button",
      "            type='submit'",
      "            class='w-full bg-indigo-600 text-white py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-200'",
      "          >",
      "            Register",
      "          </button>",
      "        </form>",
      "      </div>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "  imports: [ReactiveFormsModule,CommonModule],",
      "})",
      "export class RegisterComponent {",
      "  registerForm: FormGroup;",
      "  error: string = '';",
      "",
      "  constructor(private fb: FormBuilder) {",
      "    this.registerForm = this.fb.group({",
      "      username: ['', Validators.required],",
      "      email: ['', [Validators.required, Validators.email]],",
      "      password: ['', Validators.required],",
      "      confirmPassword: ['', Validators.required],",
      "    });",
      "  }",
      "",
      "  async handleRegister() {",
      "    const { password, confirmPassword, username, email } = this.registerForm.value;",
      "    if (password !== confirmPassword) {",
      "      this.error = 'Passwords do not match';",
      "      return;",
      "    }",
      "    try {",
      "      const response = await fetch('example-url', {",
      "        method: 'POST',",
      "        headers: {",
      "          'Content-Type': 'application/json',",
      "        },",
      "        body: JSON.stringify({ username, email, password }),",
      "      });",
      "      const data = await response.json();",
      "      console.log('Response:', data);",
      "    } catch (error) {",
      "      console.error('Error:', error);",
      "    }",
      "  }",
      "}"
    ],
    "description": "This will create a certain registration page for you"
  },
  "404 Page": {
    "prefix": "erg-404",
    "body": [
      "import { Component } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'app-not-found',",
      "  template: `",
      "    <div class='flex items-center justify-center h-screen bg-gray-100'>",
      "      <div class='text-center'>",
      "        <h1 class='text-6xl font-bold text-indigo-600 mb-4'>404</h1>",
      "        <p class='text-2xl text-gray-700 mb-6'>Oops! Page not found.</p>",
      "        <button",
      "          (click)='goHome()'",
      "          class='px-6 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition duration-200'",
      "        >",
      "          Go to Homepage",
      "        </button>",
      "      </div>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "})",
      "export class NotFoundComponent {",
      "  goHome() {",
      "    window.location.replace('/');",
      "  }",
      "}"
    ],
    "description": "This will create a 404 Not Found page for you"
  },
  "About Page": {
    "prefix": "erg-about",
    "body": [
      "import { Component } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'app-about-us',",
      "  template: `",
      "    <div class='flex items-center justify-center min-h-screen bg-gray-100 p-6'>",
      "      <div class='max-w-4xl bg-white rounded-lg shadow-lg p-8'>",
      "        <h1 class='text-4xl font-bold text-indigo-600 text-center mb-4'>About Us</h1>",
      "        <p class='text-lg text-gray-700 mb-6 text-center'>",
      "          We are a passionate team dedicated to delivering the best solutions for our customers. ",
      "          Our mission is to empower businesses through innovative technology.",
      "        </p>",
      "        <h2 class='text-2xl font-semibold text-gray-800 mb-4'>Our Mission</h2>",
      "        <p class='text-gray-600 mb-6'>",
      "          Our mission is to revolutionize the industry by providing top-notch services and building ",
      "          long-term partnerships with our clients.",
      "        </p>",
      "        <h2 class='text-2xl font-semibold text-gray-800 mb-4'>Our Vision</h2>",
      "        <p class='text-gray-600 mb-6'>",
      "          We envision a world where technology seamlessly integrates into everyday life, enhancing ",
      "          productivity and driving innovation.",
      "        </p>",
      "        <h2 class='text-2xl font-semibold text-gray-800 mb-4'>Our Team</h2>",
      "        <p class='text-gray-600 mb-6'>",
      "          Our team consists of talented professionals from various fields, working together to create ",
      "          impactful solutions and deliver exceptional results.",
      "        </p>",
      "      </div>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "})",
      "export class AboutUsComponent {}"
    ],
    "description": "This will create an About Us page for you"
  },
  "Button": {
    "prefix": "erg-button",
    "body": [
      "import { Component, EventEmitter, Input, Output } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'app-button',",
      "  template: `",
      "    <button",
      "      class='px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition'",
      "      (click)='handleClick()'",
      "    >",
      "      {{ text }}",
      "    </button>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "})",
      "export class ButtonComponent {",
      "  @Input() text!: string;",
      "  @Output() onOk = new EventEmitter<any>();",
      "  handleClick() {",
      "  this.onOk.emit('button clicked');",
      "  }",
      "}"
    ],
    "description": "This will create a reusable button component"
  },
  "Search": {
    "prefix": "erg-search",
    "body": [
      "import { Component, EventEmitter, Input, Output } from '@angular/core';",
      "import { FormsModule } from '@angular/forms';",
      "",
      "@Component({",
      "  selector: 'app-search',",
      "  template: `",
      "    <div class='flex'>",
      "      <input",
      "        type='text'",
      "        class='border border-gray-300 rounded-l-md px-4 py-2 w-full focus:outline-none'",
      "        [placeholder]='placeholder'",
      "        [(ngModel)]='query'",
      "      />",
      "      <button",
      "        class='bg-indigo-600 text-white px-4 py-2 rounded-r-md hover:bg-indigo-700 transition'",
      "        (click)='onSearch()'",
      "      >",
      "        Search",
      "      </button>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "  imports: [FormsModule],",
      "})",
      "export class SearchComponent {",
      "  @Input() placeholder: string = 'Search...';",
      "  @Output() search = new EventEmitter<string>();",
      "  query: string = '';",
      "",
      "  onSearch() {",
      "    this.search.emit(this.query);",
      "    this.query = '';",
      "  }",
      "}"
    ],
    "description": "This will create a reusable search component"
  },
  "Search Select": {
    "prefix": "erg-search-select",
    "body": [
      "import { CommonModule } from '@angular/common';",
      "import { Component, EventEmitter, Input, Output } from '@angular/core';",
      "import { FormsModule } from '@angular/forms';",
      "",
      "@Component({",
      "  selector: 'app-search-select',",
      "  template: `",
      "    <div class='relative' (focusout)='handleBlur()'>",
      "      <input",
      "        type='text'",
      "        class='border border-gray-300 rounded-md px-4 py-2 w-full focus:outline-none'",
      "        placeholder='Search...'",
      "        [(ngModel)]='query'",
      "        (focus)='handleFocus()'",
      "      />",
      "      <ul *ngIf='isOpen && filteredOptions.length > 0' class='absolute bg-white border border-gray-300 rounded-md w-full mt-1 max-h-48 overflow-auto z-10'>",
      "        <li",
      "          *ngFor='let option of filteredOptions'",
      "          (click)='handleSelect(option)'",
      "          class='px-4 py-2 hover:bg-indigo-100 cursor-pointer'",
      "        >",
      "          {{ option }}",
      "        </li>",
      "      </ul>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "  imports: [FormsModule,CommonModule],",
      "})",
      "export class SearchSelectComponent {",
      "  @Input() options: string[] = [];",
      "  @Output() select = new EventEmitter<string>();",
      "  query: string = '';",
      "  isOpen: boolean = false;",
      "",
      "  get filteredOptions() {",
      "    return this.options.filter(option => option.toLowerCase().includes(this.query.toLowerCase()));",
      "  }",
      "",
      "  handleSelect(option: string) {",
      "    this.query = option;",
      "    this.isOpen = false;",
      "    this.select.emit(option);",
      "  }",
      "",
      "  handleFocus() {",
      "    this.isOpen = true;",
      "  }",
      "",
      "  handleBlur() {",
      "    setTimeout(() => {",
      "      this.isOpen = false;",
      "    }, 100);",
      "  }",
      "}"
    ],
    "description": "This will create a reusable search select component"
  },
  "Modal": {
    "prefix": "erg-modal",
    "body": [
      "import { CommonModule } from '@angular/common';",
      "import { Component, EventEmitter, Input, Output } from '@angular/core';",
      "",
      "@Component({",
      "  selector: 'app-modal',",
      "  template: `",
      "    <div>",
      "      <button",
      "        class='px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition'",
      "        (click)='openModal()'",
      "      >",
      "        Open Modal",
      "      </button>",
      "",
      "      <div *ngIf='isOpen' class='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50'>",
      "        <div class='bg-white rounded-lg p-6 shadow-lg max-w-md w-full relative'>",
      "          <button",
      "            class='absolute top-3 right-3 text-gray-500 hover:text-gray-700 transition'",
      "            (click)='closeModal()'",
      "          >",
      "            &#x2715;",
      "          </button>",
      "",
      "          <h2 class='text-xl font-semibold text-gray-800 mb-4'>{{ title }}</h2>",
      "          <div><ng-content></ng-content></div>",
      "",
      "          <div class='flex justify-end mt-6 space-x-2'>",
      "            <button",
      "              class='bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition'",
      "              (click)='closeModal()'",
      "            >",
      "              Close",
      "            </button>",
      "",
      "            <button",
      "              class='bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition'",
      "              (click)='onClick()'",
      "            >",
      "              Ok",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  `,",
      "  styles: [],",
      "  standalone: true,",
      "  imports: [CommonModule],",
      "})",
      "export class ModalComponent {",
      "  @Input() title: string = '';",
      "  @Output() ok = new EventEmitter<any>();",
      "  isOpen: boolean = false;",
      "",
      "  openModal() {",
      "    this.isOpen = true;",
      "  }",
      "",
      "  closeModal() {",
      "    this.isOpen = false;",
      "  }",
      "",
      "  onClick() {",
      "    this.ok.emit('button clicked');",
      "    this.closeModal();",
      "  }",
      "}"
    ],
    "description": "This will create a reusable modal component"
  }
}
